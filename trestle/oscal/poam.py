# modified by fix_any.py
# -*- mode:python; coding:utf-8 -*-
# Copyright (c) 2020 IBM Corp. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# generated by datamodel-codegen:
#   filename:  poam.py_flat.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Dict, List, Optional

from pydantic import AnyUrl, EmailStr, Extra, Field, constr
from trestle.core.base_model import OscalBaseModel


class Property(OscalBaseModel):
    name: str = Field(
        ...,
        description='Identifying the purpose and intended use of the property, part or other object.',
        title='Name',
    )
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    ns: Optional[str] = Field(
        None, description='A namespace qualifying the name.', title='Namespace'
    )
    class_: Optional[str] = Field(
        None,
        alias='class',
        description='Indicating the type or classification of the containing object',
        title='Class',
    )
    value: str


class Link(OscalBaseModel):
    href: str = Field(
        ...,
        description='A link to a document or document fragment (actual, nominal or projected)',
        title='hypertext reference',
    )
    rel: Optional[str] = Field(
        None,
        description="Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.",
        title='Relation',
    )
    media_type: Optional[str] = Field(
        None,
        alias='media-type',
        description='Describes the media type of the linked resource',
        title='Media type',
    )
    text: str


class RevisionHistoryItem(OscalBaseModel):
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    published: Optional[datetime] = Field(
        None,
        description='The date and time this document was published.',
        title='Publication Timestamp',
    )
    last_modified: Optional[datetime] = Field(
        None,
        alias='last-modified',
        description='Date and time of last modification.',
        title='Last modified timestamp',
    )
    version: Optional[str] = Field(
        None,
        description='The version of the document content.',
        title='Document version',
    )
    oscal_version: Optional[str] = Field(
        None,
        alias='oscal-version',
        description='OSCAL model version.',
        title='OSCAL version',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    links: Optional[List[Link]] = Field(None, min_items=1)
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class DocumentId(OscalBaseModel):
    type: str = Field(..., description='Qualifies the kind of document identifier.')
    identifier: str


class Annotation(OscalBaseModel):
    name: str = Field(
        ...,
        description='Identifying the purpose and intended use of the property, part or other object.',
        title='Name',
    )
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    ns: Optional[str] = Field(
        None, description='A namespace qualifying the name.', title='Namespace'
    )
    value: Optional[str] = Field(
        None, description='Indicates the value of the characteristic.', title='Value'
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Role(OscalBaseModel):
    id: str = Field(
        ...,
        description='Unique identifier of the containing object',
        title='Identifier',
    )
    title: str = Field(
        ..., description='A title for display and navigation', title='Title'
    )
    short_name: Optional[str] = Field(
        None,
        alias='short-name',
        description='A common name, short name or acronym',
        title='short-name',
    )
    desc: Optional[str] = Field(
        None, description='A short textual description', title='Description'
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    links: Optional[List[Link]] = Field(None, min_items=1)
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Address(OscalBaseModel):
    type: Optional[str] = Field(None, description='Indicates the type of address.')
    postal_address: Optional[List[str]] = Field(
        None, alias='postal-address', min_items=1
    )
    city: Optional[str] = Field(
        None,
        description='City, town or geographical region for mailing address',
        title='City',
    )
    state: Optional[str] = Field(
        None,
        description='State, province or analogous geographical region for mailing address',
        title='State',
    )
    postal_code: Optional[str] = Field(
        None,
        alias='postal-code',
        description='Postal or ZIP code for mailing address',
        title='Postal Code',
    )
    country: Optional[str] = Field(
        None, description='Country for mailing address', title='Country'
    )


class EmailAddress(OscalBaseModel):
    __root__: EmailStr = Field(..., description='Email address')


class TelephoneNumber(OscalBaseModel):
    type: Optional[str] = Field(None, description='Indicates the type of phone number.')
    number: str


class Location(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    address: Address = Field(..., description='A postal address.', title='Address')
    email_addresses: Optional[List[EmailAddress]] = Field(
        None, alias='email-addresses', min_items=1
    )
    telephone_numbers: Optional[List[TelephoneNumber]] = Field(
        None, alias='telephone-numbers', min_items=1
    )
    URLs: Optional[List[AnyUrl]] = Field(None, min_items=1)
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    links: Optional[List[Link]] = Field(None, min_items=1)
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Type(Enum):
    person = 'person'
    organization = 'organization'


class ExternalId(OscalBaseModel):
    type: str = Field(
        ...,
        description='Indicating the type of identifier, address, email or other data item.',
        title='Type',
    )
    id: str


class MemberOfOrganization(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Identifies that the containing object is a member of the organization associated with the provided UUID.',
    )


class LocationUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(..., description='References a location defined in metadata.')


class Party(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    type: Type = Field(
        ...,
        description='A category describing the kind of party the object describes.',
        title='Party Type',
    )
    party_name: str = Field(
        ...,
        alias='party-name',
        description='The full (legal) name of the party.',
        title='Party Name',
    )
    short_name: Optional[str] = Field(
        None,
        alias='short-name',
        description='A common name, short name or acronym',
        title='short-name',
    )
    external_ids: Optional[List[ExternalId]] = Field(
        None, alias='external-ids', min_items=1
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    links: Optional[List[Link]] = Field(None, min_items=1)
    addresses: Optional[List[Address]] = Field(None, min_items=1)
    email_addresses: Optional[List[EmailAddress]] = Field(
        None, alias='email-addresses', min_items=1
    )
    telephone_numbers: Optional[List[TelephoneNumber]] = Field(
        None, alias='telephone-numbers', min_items=1
    )
    member_of_organizations: Optional[List[MemberOfOrganization]] = Field(
        None, alias='member-of-organizations', min_items=1
    )
    location_uuids: Optional[List[LocationUuid]] = Field(
        None, alias='location-uuids', min_items=1
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Metadata(OscalBaseModel):
    title: str = Field(
        ..., description='A title for display and navigation', title='Title'
    )
    published: Optional[datetime] = Field(
        None,
        description='The date and time this document was published.',
        title='Publication Timestamp',
    )
    last_modified: datetime = Field(
        ...,
        alias='last-modified',
        description='Date and time of last modification.',
        title='Last modified timestamp',
    )
    version: str = Field(
        ...,
        description='The version of the document content.',
        title='Document version',
    )
    oscal_version: str = Field(
        ...,
        alias='oscal-version',
        description='OSCAL model version.',
        title='OSCAL version',
    )
    revision_history: Optional[List[RevisionHistoryItem]] = Field(
        None, alias='revision-history', min_items=1
    )
    document_ids: Optional[List[DocumentId]] = Field(
        None, alias='document-ids', min_items=1
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    links: Optional[List[Link]] = Field(None, min_items=1)
    roles: Optional[List[Role]] = Field(None, min_items=1)
    locations: Optional[List[Location]] = Field(None, min_items=1)
    parties: Optional[List[Party]] = Field(None, min_items=1)
    responsible_parties: Optional[Dict[str, ResponsibleParty]] = Field(
        None, alias='responsible-parties'
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class ImportSsp(OscalBaseModel):
    href: str = Field(
        ...,
        description='A link to a document or document fragment (actual, nominal or projected)',
        title='hypertext reference',
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class SystemId(OscalBaseModel):
    identifier_type: Optional[AnyUrl] = Field(
        None,
        alias='identifier-type',
        description='Identifies the identification system from which the provided identifier was assigned.',
        title='Identification System Type',
    )
    id: str


class LocalDefinitions(OscalBaseModel):
    components: Optional[Dict[str, Component]] = None
    inventory_items: Optional[Dict[str, InventoryItem]] = Field(
        None, alias='inventory-items'
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Result(OscalBaseModel):
    system: Optional[AnyUrl] = Field(
        None,
        description='Identifies the framework or rules to which this value conforms.',
        title='Assessment System',
    )
    STRVALUE: str


class ImplementationStatus(OscalBaseModel):
    system: Optional[AnyUrl] = Field(
        None,
        description='Identifies the framework or rules to which this value conforms.',
        title='Assessment System',
    )
    STRVALUE: str


class ObjectiveStatus(OscalBaseModel):
    objective_id: Optional[str] = Field(
        None,
        alias='objective-id',
        description='Points to an assessment objective.',
        title='Objective ID',
    )
    control_id: Optional[str] = Field(
        None,
        alias='control-id',
        description='A reference to a control identifier.',
        title='Control Identifier Reference',
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    description: Optional[str] = Field(
        None,
        description='A description supporting the parent item.',
        title='Description',
    )
    result: Optional[Result] = Field(
        None,
        description='A brief indication as to whether the objective is satisfied or not.',
        title='Result',
    )
    implementation_status: Optional[ImplementationStatus] = Field(
        None,
        alias='implementation-status',
        description='Identifies the implementation status of the control or control objective.',
        title='Implementation Status',
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Assessor(OscalBaseModel):
    party_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='party-uuid',
        description='The UUID of the assessor who collected the evidence or made the observation.',
        title='Party UUID',
    )
    STRVALUE: str


class Prop(OscalBaseModel):
    name: str = Field(
        ...,
        description='Identifying the purpose and intended use of the property, part or other object.',
        title='Name',
    )
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    ns: Optional[str] = Field(
        None, description='A namespace qualifying the name.', title='Namespace'
    )
    class_: Optional[str] = Field(
        None,
        alias='class',
        description='Indicating the type or classification of the containing object',
        title='Class',
    )
    value: str


class SubjectReference(OscalBaseModel):
    uuid_ref: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='uuid-ref',
        description="A pointer to a component, inventory-item, location, party, user, or resource using it's UUID.",
        title='UUID Reference',
    )
    type: str = Field(
        ...,
        description='Indicating the type of identifier, address, email or other data item.',
        title='Type',
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    props: Optional[List[Prop]] = Field(None, min_items=1)


class Origin(OscalBaseModel):
    uuid_ref: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='uuid-ref',
        description="A pointer to a relevant item, using it's UUID.",
        title='UUID Reference',
    )
    type: Optional[str] = Field(
        None,
        description='Indicating the type of identifier, address, email or other data item.',
        title='Type',
    )
    STRVALUE: str


class Observation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    description: str = Field(
        ...,
        description='A description supporting the parent item.',
        title='Description',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    observation_methods: List[str] = Field(
        ..., alias='observation-methods', min_items=1
    )
    observation_types: Optional[List[str]] = Field(
        None, alias='observation-types', min_items=1
    )
    assessors: Optional[List[Assessor]] = Field(None, min_items=1)
    subject_references: Optional[List[SubjectReference]] = Field(
        None, alias='subject-references', min_items=1
    )
    origins: Optional[List[Origin]] = Field(None, min_items=1)
    evidence_group: Optional[List[Evidence]] = Field(
        None, alias='evidence-group', min_items=1
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class ThreatId(OscalBaseModel):
    system: AnyUrl = Field(
        ...,
        description='Specifies the source of the threat information.',
        title='Threat Type Identification System',
    )
    uri: Optional[AnyUrl] = Field(
        None,
        description='An optional location for the threat data, from which this ID originates.',
        title='URI',
    )
    STRVALUE: str


class RiskMetric(OscalBaseModel):
    name: str = Field(
        ...,
        description='Identifying the purpose and intended use of the property, part or other object.',
        title='Name',
    )
    class_: Optional[str] = Field(
        None,
        alias='class',
        description='Indicating the type or classification of the containing object',
        title='Class',
    )
    system: Optional[str] = Field(
        None,
        description='Specifies the system represented by this risk metric.',
        title='System',
    )
    STRVALUE: str


class MitigatingFactor(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    implementation_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='implementation-uuid',
        description='Points to an implementation statement in the SSP.',
        title='Implementation UUID',
    )
    description: str = Field(
        ...,
        description='A description supporting the parent item.',
        title='Description',
    )
    subject_references: Optional[List[SubjectReference]] = Field(
        None, alias='subject-references', min_items=1
    )


class Requirement(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    subject_references: Optional[List[SubjectReference]] = Field(
        None, alias='subject-references', min_items=1
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    description: str = Field(
        ...,
        description='A description supporting the parent item.',
        title='Description',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class ActivityUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(..., description='Links the task to a defined activity.')


class PartyUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(..., description='References a party defined in metadata.')


class Task(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    description: Optional[str] = Field(
        None,
        description='A description supporting the parent item.',
        title='Description',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    start: Optional[datetime] = Field(
        None, description='Identifies the start of a task.', title='Start'
    )
    end: Optional[datetime] = Field(
        None, description='Identifies the end of a task.', title='End'
    )
    activity_uuids: Optional[List[ActivityUuid]] = Field(
        None, alias='activity-uuids', min_items=1
    )
    role_ids: Optional[List[str]] = Field(None, alias='role-ids', min_items=1)
    party_uuids: Optional[List[PartyUuid]] = Field(
        None, alias='party-uuids', min_items=1
    )
    location_uuids: Optional[List[LocationUuid]] = Field(
        None, alias='location-uuids', min_items=1
    )
    compare_to: Optional[str] = Field(
        None,
        alias='compare-to',
        description='Typically used in when copying content from the assessment plan to the assessment results. The uuid should be changed in the assessment results file, and the compare-to field should be set to the original assessment plan uuid value. This enables the plan and results to be compared later to identify what changed between the two.',
        title='Compare To',
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Schedule(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    tasks: List[Task] = Field(..., min_items=1)


class TrackingEntry(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    type: Optional[str] = Field(
        None,
        description='Indicating the type of identifier, address, email or other data item.',
        title='Type',
    )
    date_time_stamp: datetime = Field(
        ...,
        alias='date-time-stamp',
        description='Date/time stamp of the associated information.',
        title='Date/Time Stamp',
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    description: str = Field(
        ...,
        description='A description supporting the parent item.',
        title='Description',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class RemediationTracking(OscalBaseModel):
    tracking_entries: List[TrackingEntry] = Field(
        ..., alias='tracking-entries', min_items=1
    )


class Risk(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    title: str = Field(
        ..., description='A title for display and navigation', title='Title'
    )
    description: str = Field(
        ...,
        description='A description supporting the parent item.',
        title='Description',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    risk_metrics: Optional[List[RiskMetric]] = Field(
        None, alias='risk-metrics', min_items=1
    )
    risk_statement: str = Field(
        ...,
        alias='risk-statement',
        description='Describes the risk.',
        title='Risk Statement',
    )
    mitigating_factors: Optional[List[MitigatingFactor]] = Field(
        None, alias='mitigating-factors', min_items=1
    )
    remediation_deadline: Optional[datetime] = Field(
        None,
        alias='remediation-deadline',
        description='The date/time by which the risk must be closed.',
        title='Remediation Deadline',
    )
    remediation_group: Optional[List[Remediation]] = Field(
        None, alias='remediation-group', min_items=1
    )
    risk_status: str = Field(
        ...,
        alias='risk-status',
        description='Describes the status of the associated risk.',
        title='Status',
    )
    closure_actions: Optional[str] = Field(
        None,
        alias='closure-actions',
        description='Describes the actions taken that resulted in the closure of the identified risk.',
        title='Closer Actions',
    )
    remediation_tracking: Optional[RemediationTracking] = Field(
        None,
        alias='remediation-tracking',
        description='A log of events and actions taken towards the remediation of the associated risk.',
        title='Remediation Tracking',
    )
    party_uuids: Optional[List[PartyUuid]] = Field(
        None, alias='party-uuids', min_items=1
    )


class PoamItems(OscalBaseModel):
    title: str = Field(
        ..., description='A title for display and navigation', title='Title'
    )
    description: str = Field(
        ...,
        description='A description supporting the parent item.',
        title='Description',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    annotations: Optional[List[Annotation]] = Field(None, min_items=1)
    start: datetime = Field(
        ..., description='Identifies the start of a task.', title='Start'
    )
    end: Optional[datetime] = Field(
        None, description='Identifies the end of a task.', title='End'
    )
    poam_item_group: List[PoamItem] = Field(
        ..., alias='poam-item-group', min_items=1
    )
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class Citation(OscalBaseModel):
    text: str = Field(
        ...,
        description='A line of textual content whose semantic is determined by the context of use.',
        title='Text',
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    biblio: Optional[Dict[str, Any]] = Field(
        None,
        description='A container in which a set of bibliographic information can included. The model of this information is undefined by OSCAL.',
        title='Bibliographic Definition',
    )


class Hash(OscalBaseModel):
    algorithm: str = Field(
        ..., description='Method by which a hash is derived', title='Hash algorithm'
    )
    value: str


class Rlink(OscalBaseModel):
    href: str = Field(
        ...,
        description='A link to a document or document fragment (actual, nominal or projected)',
        title='hypertext reference',
    )
    media_type: Optional[str] = Field(
        None,
        alias='media-type',
        description='Describes the media type of the linked resource',
        title='Media type',
    )
    hashes: Optional[List[Hash]] = Field(None, min_items=1)


class Attachment(OscalBaseModel):
    filename: Optional[str] = Field(
        None,
        description='Name of the file before it was encoded as Base64 to be embedded in a resource. This is the name that will be assigned to the file when the file is decoded.',
        title='File Name',
    )
    media_type: Optional[str] = Field(
        None,
        alias='media-type',
        description='Describes the media type of the linked resource',
        title='Media type',
    )
    value: str


class Resource(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='A title for display and navigation', title='Title'
    )
    desc: Optional[str] = Field(
        None, description='A short textual description', title='Description'
    )
    properties: Optional[List[Property]] = Field(None, min_items=1)
    document_ids: Optional[List[DocumentId]] = Field(
        None, alias='document-ids', min_items=1
    )
    citation: Optional[Citation] = Field(
        None,
        description='A citation consisting of end note text and optional structured bibliographic data.',
        title='Citation',
    )
    rlinks: Optional[List[Rlink]] = Field(None, min_items=1)
    attachments: Optional[List[Attachment]] = Field(None, min_items=1)
    remarks: Optional[str] = Field(
        None, description='Additional commentary on the parent item.', title='Remarks'
    )


class BackMatter(OscalBaseModel):
    resources: Optional[List[Resource]] = Field(None, min_items=1)


class PlanOfActionAndMilestones(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A RFC 4122 version 4 Universally Unique Identifier (UUID) for the containing object.',
        title='Universally Unique Identifier',
    )
    metadata: Metadata = Field(
        ...,
        description='Provides information about the publication and availability of the containing document.',
        title='Publication metadata',
    )
    import_ssp: Optional[ImportSsp] = Field(
        None,
        alias='import-ssp',
        description='Used by the assessment plan and POA&M to import information about the system.',
        title='Import System Security Plan',
    )
    system_id: Optional[SystemId] = Field(
        None,
        alias='system-id',
        description='A unique identifier for the system described by this system security plan.',
        title='System Identification',
    )
    local_definitions: Optional[LocalDefinitions] = Field(
        None,
        alias='local-definitions',
        description='Allows components, and inventory-items to be defined within the POA&M for circumstances where no OSCAL-based SSP exists, or is not delivered with the POA&M.',
        title='Local Definitions',
    )
    poam_items: PoamItems = Field(
        ...,
        alias='poam-items',
        description='This identifies initial and residual risks, deviations, and disposition.',
        title='POA&M Items',
    )
    back_matter: Optional[BackMatter] = Field(
        None,
        alias='back-matter',
        description='A collection of citations and resource references.',
        title='Back matter',
    )


class Model(OscalBaseModel):
    plan_of_action_and_milestones: PlanOfActionAndMilestones = Field(
        ..., alias='plan-of-action-and-milestones'
    )

